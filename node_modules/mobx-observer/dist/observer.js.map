{"version":3,"sources":["../observer.js"],"names":[],"mappings":";;;;;;;;QAMgB,Q,GAAA,Q;QAgCA,Y,GAAA,Y;QAIA,Y,GAAA,Y;;AA1ChB;;;;;;;;AACA,IAAI,kBAAJ;;;;;AAKO,SAAS,QAAT,CAAmB,cAAnB,EAAmC;AACxC,MAAI,eAAe,SAAf,CAAyB,cAAzB,CAAwC,mBAAxC,CAAJ,EAAkE;AAAA;AAChE,UAAM,mBAAmB,eAAe,SAAf,CAAyB,iBAAlD;AACA,qBAAe,SAAf,CAAyB,iBAAzB,GAA6C,YAAY;AAAA;;AACvD,aAAK,QAAL,GAAgB,mBAAQ,YAAM;AAC5B,gBAAK,MAAL;AACA,gBAAK,WAAL;AACD,SAHe,CAAhB;AAIA,yBAAiB,IAAjB,CAAsB,IAAtB;AACD,OAND;AAFgE;AASjE,GATD,MASO;AACL,mBAAe,SAAf,CAAyB,iBAAzB,GAA6C,YAAY;AAAA;;AACvD,WAAK,QAAL,GAAgB,mBAAQ,YAAM;AAC5B,eAAK,MAAL;AACA,eAAK,WAAL;AACD,OAHe,CAAhB;AAID,KALD;AAMD;AACD,MAAI,eAAe,SAAf,CAAyB,cAAzB,CAAwC,sBAAxC,CAAJ,EAAqE;AAAA;AACnE,UAAM,kBAAkB,eAAe,SAAf,CAAyB,oBAAjD;AACA,qBAAe,SAAf,CAAyB,oBAAzB,GAAgD,YAAY;AAC1D,aAAK,QAAL;AACA,wBAAgB,IAAhB,CAAqB,IAArB;AACD,OAHD;AAFmE;AAMpE,GAND,MAMO;AACL,mBAAe,SAAf,CAAyB,oBAAzB,GAAgD,YAAY;AAC1D,WAAK,QAAL;AACD,KAFD;AAGD;AACD,SAAO,cAAP;AACD;;AAEM,SAAS,YAAT,CAAuB,IAAvB,EAA6B;AAClC,cAAY,IAAZ;AACD;;AAEM,SAAS,YAAT,CAAuB,EAAvB,EAA2B;AAAA,MAC1B,EAD0B;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,0CAET;AAAA;;AACnB,aAAK,QAAL,GAAgB,mBAAQ,YAAM;AAC5B,iBAAK,MAAL;AACA,iBAAK,WAAL;AACD,SAHe,CAAhB;AAID;AAP6B;AAAA;AAAA,+BAQpB;AACR,eAAO,GAAG,KAAK,KAAR,CAAP;AACD;AAV6B;AAAA;AAAA,6CAWN;AACtB,aAAK,QAAL;AACD;AAb6B;;AAAA;AAAA,IACf,SADe;;AAehC,SAAO,EAAP;AACD","file":"observer.js","sourcesContent":["import {autorun} from 'mobx'\nlet Component\n\n/**\n * Observer decorator\n */\nexport function observer (componentClass) {\n  if (componentClass.prototype.hasOwnProperty('componentDidMount')) {\n    const originalDidMount = componentClass.prototype.componentDidMount\n    componentClass.prototype.componentDidMount = function () {\n      this.disposer = autorun(() => {\n        this.render()\n        this.forceUpdate()\n      })\n      originalDidMount.call(this)\n    }\n  } else {\n    componentClass.prototype.componentDidMount = function () {\n      this.disposer = autorun(() => {\n        this.render()\n        this.forceUpdate()\n      })\n    }\n  }\n  if (componentClass.prototype.hasOwnProperty('componentWillUnmount')) {\n    const originalUnmount = componentClass.prototype.componentWillUnmount\n    componentClass.prototype.componentWillUnmount = function () {\n      this.disposer()\n      originalUnmount.call(this)\n    }\n  } else {\n    componentClass.prototype.componentWillUnmount = function () {\n      this.disposer()\n    }\n  }\n  return componentClass\n}\n\nexport function setComponent (comp) {\n  Component = comp\n}\n\nexport function makeObserver (fn) {\n  class Cl extends Component {\n    componentDidMount () {\n      this.disposer = autorun(() => {\n        this.render()\n        this.forceUpdate()\n      })\n    }\n    render () {\n      return fn(this.props)\n    }\n    componentWillUnmount () {\n      this.disposer()\n    }\n  }\n  return Cl\n}\n"]}